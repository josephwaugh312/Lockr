name: Coverage Gate

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: lockr_user
          POSTGRES_PASSWORD: lockr_test_password
          POSTGRES_DB: lockr_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history for diff coverage

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Setup test database
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: lockr_test
        DB_USER: lockr_user
        DB_PASSWORD: lockr_test_password
      run: |
        npm run migrate
        npm run test:db:setup

    - name: Run tests with coverage
      env:
        NODE_ENV: test
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: lockr_test
        DB_USER: lockr_user
        DB_PASSWORD: lockr_test_password
        JWT_SECRET: test-jwt-secret
        JWT_REFRESH_SECRET: test-refresh-secret
        ENCRYPTION_KEY: test-encryption-key
      run: npm run test:coverage

    - name: Check diff coverage (PR only)
      if: github.event_name == 'pull_request'
      env:
        NODE_ENV: test
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: lockr_test
        DB_USER: lockr_user
        DB_PASSWORD: lockr_test_password
        JWT_SECRET: test-jwt-secret
        JWT_REFRESH_SECRET: test-refresh-secret
        ENCRYPTION_KEY: test-encryption-key
      run: npm run test:diff-coverage

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

    - name: Generate coverage comment (PR only)
      if: github.event_name == 'pull_request'
      uses: romeovs/lcov-reporter-action@v0.3.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        lcov-file: ./coverage/lcov.info
        
    - name: Check coverage thresholds
      run: |
        echo "ðŸ“Š Coverage Report:"
        npx jest --coverage --coverageReporters=text-summary
        echo ""
        echo "âœ… Coverage thresholds enforced:"
        echo "  - Global: Lines â‰¥ 90%, Branches â‰¥ 85%, Functions â‰¥ 85%, Statements â‰¥ 90%"
        echo "  - Per-file: Lines â‰¥ 70%, Branches â‰¥ 70%"
        echo "  - Diff (PR): Lines â‰¥ 90%, Branches â‰¥ 85%"

    - name: Archive coverage reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: coverage-reports
        path: coverage/
        retention-days: 30